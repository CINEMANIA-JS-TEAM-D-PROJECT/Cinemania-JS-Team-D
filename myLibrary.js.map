{"version":3,"file":"myLibrary.js","sources":["../src/MyLibrary.js"],"sourcesContent":["import { openModal } from './js/modal.js';\r\n\r\n// Global değişkenler\r\nlet currentMovies = []; // tüm filmler\r\nlet displayedMovies = 0; // şu ana kadar görüntülenen filmler\r\nconst moviesPerPage = 9;\r\nconst genreMap = {}; // Genre ID-Name eşleşmelerini saklayacak bir obje\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  loadMoviesFromLibrary();\r\n\r\n  // Genre filtresi için event listener'ları ayarla\r\n  const genreSelect = document.getElementById('genre-filter');\r\n  if (genreSelect) {\r\n    // İlk tıklamada API'den türleri çek\r\n    let genresFetched = false;\r\n\r\n    genreSelect.addEventListener('click', () => {\r\n      // Eğer türler henüz çekilmediyse\r\n      if (!genresFetched) {\r\n        fetchGenres();\r\n        genresFetched = true;\r\n      }\r\n    });\r\n\r\n    // Change event listener'ı ekle\r\n    genreSelect.addEventListener('change', e => {\r\n      const selectedGenre = e.target.value;\r\n      filterMoviesByGenre(selectedGenre);\r\n    });\r\n  }\r\n\r\n  // Load more butonu için event listener\r\n  const loadMoreBtn = document.getElementById('load-more');\r\n  if (loadMoreBtn) {\r\n    loadMoreBtn.addEventListener('click', () => {\r\n      renderMovies(currentMovies, true);\r\n    });\r\n  }\r\n  // ✅ Modal açmak için film kartına tıklama listener'ı\r\n  document.addEventListener('click', event => {\r\n    const card = event.target.closest('.movie-card-library');\r\n    if (card) {\r\n      const movieId = card.querySelector('.remove-btn').getAttribute('data-id');\r\n      const movie = currentMovies.find(m => m.id == movieId);\r\n      if (movie) {\r\n        openModal(movie);\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\n// API'den türleri çek\r\nfunction fetchGenres() {\r\n  const apiUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=3c5d79694d82b9e1fe6883553a34fc2d`;\r\n\r\n  fetch(apiUrl)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const genres = data.genres;\r\n      const genreSelect = document.getElementById('genre-filter');\r\n\r\n      // Tüm seçenekleri temizle\r\n      genreSelect.innerHTML = '';\r\n\r\n      // \"Tüm Filmler\" seçeneğini ekle\r\n      const allOption = document.createElement('option');\r\n      allOption.value = 'all';\r\n      allOption.textContent = 'Genre';\r\n      allOption.selected = true;\r\n      genreSelect.appendChild(allOption);\r\n\r\n      // API'den gelen türleri ekle\r\n      genres.forEach(genre => {\r\n        const option = document.createElement('option');\r\n        option.value = genre.id;\r\n        option.textContent = genre.name;\r\n        genreSelect.appendChild(option);\r\n\r\n        // Genre ID-Name eşleşmesini sakla\r\n        genreMap[genre.id] = genre.name;\r\n      });\r\n\r\n      // Genre map'i localStorage'a kaydet\r\n      localStorage.setItem('genreMap', JSON.stringify(genreMap));\r\n\r\n      // Kütüphanedeki filmlere genre isimlerini ekleyerek yeniden yükle\r\n      updateMovieGenres();\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching genres:', error);\r\n    });\r\n}\r\n\r\n// Kütüphanedeki filmlere genre isimlerini ekle\r\nfunction updateMovieGenres() {\r\n  let library = JSON.parse(localStorage.getItem('library')) || [];\r\n\r\n  // Genre ID'leri isimlerle eşleştir\r\n  library = library.map(movie => {\r\n    if (movie.genre_ids && Array.isArray(movie.genre_ids)) {\r\n      // TMDB API'dan gelen filmlerde genre_ids var\r\n      const genreNames = movie.genre_ids\r\n        .map(id => genreMap[id] || 'Bilinmeyen')\r\n        .join(', ');\r\n      return { ...movie, genre: genreNames };\r\n    } else if (movie.genre && !isNaN(movie.genre)) {\r\n      // Eğer genre bir ID ise, isimle değiştir\r\n      return { ...movie, genre: genreMap[movie.genre] || 'Bilinmeyen' };\r\n    }\r\n    return movie;\r\n  });\r\n  // Güncel verileri göster\r\n  currentMovies = library;\r\n  displayedMovies = 0;\r\n  renderMovies(library, false);\r\n  // Güncellenmiş kütüphaneyi kaydet\r\n  localStorage.setItem('library', JSON.stringify(library));\r\n}\r\nconst genreSelect = document.getElementById('genre-select');\r\nconst genreContainer = document.getElementById('filter-name');\r\nexport function renderMovies(movies, loadMore = false) {\r\n  const movieContainer = document.getElementById('movie-list-library');\r\n  if (!movieContainer) {\r\n    console.error(\"'movie-list-library' ID'li element bulunamadı!\");\r\n    return;\r\n  }\r\n\r\n  if (movies.length === 0) {\r\n    movieContainer.innerHTML = `<div class=\"message-btn-library\" >\r\n      <p class =\"no-movies-message\">OOPS... We are very sorry! You don’t have any movies at your library.</p>\r\n      <button id=\"go-to-catalog\" class=\"search-btn-library\">Search movie</button>\r\n    </div>\r\n  `;\r\n\r\n    if (genreContainer) {\r\n      genreContainer.style.display = 'none';\r\n    }\r\n    if (genreSelect) {\r\n      genreSelect.style.display = 'none';\r\n    }\r\n    const searchBtn = document.getElementById('go-to-catalog');\r\n    if (searchBtn) {\r\n      searchBtn.addEventListener('click', () => {\r\n        window.location.href = 'catalog.html';\r\n      });\r\n    }\r\n    const loadMoreBtn = document.getElementById('load-more');\r\n    if (loadMoreBtn) {\r\n      loadMoreBtn.style.display = 'none';\r\n    }\r\n    return;\r\n  }\r\n  if (genreContainer) {\r\n    genreContainer.style.display = 'block';\r\n  }\r\n\r\n  const startIndex = loadMore ? displayedMovies : 0;\r\n  const endIndex = Math.min(startIndex + moviesPerPage, movies.length);\r\n  const moviesToShow = movies.slice(startIndex, endIndex);\r\n\r\n  // Film varsa ekle\r\n  if (!loadMore) {\r\n    movieContainer.innerHTML = ''; // önce temizle (loadMore değilse)\r\n  }\r\n  const fragment = document.createDocumentFragment();\r\n\r\n  moviesToShow.forEach(movie => {\r\n    const posterUrl =\r\n      movie.poster || `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\r\n    const title = movie.title;\r\n    const year = movie.release_date\r\n      ? movie.release_date.slice(0, 4)\r\n      : 'Yıl yok';\r\n    const genre = movie.genre || 'Kategori belirtilmemiş';\r\n    const rating = movie.vote_average || 0;\r\n    const id = movie.id;\r\n\r\n    const base = import.meta.env.BASE_URL;\r\n\r\n    let starsHTML = '';\r\n    if (rating >= 8.5) {\r\n      starsHTML = `<img src=\"${base}img/star5.png\" alt=\"5 stars\" class=\"star-icon\"/>`;\r\n    } else if (rating >= 6.5) {\r\n      starsHTML = `<img src=\"${base}img/half4.png\" alt=\"4.5 stars\" class=\"star-icon\"/>`;\r\n    } else if (rating >= 4) {\r\n      starsHTML = `<img src=\"${base}img/half3.png\" alt=\"3.5 stars\" class=\"star-icon\"/>`;\r\n    }\r\n\r\n    const movieCardHTML = `\r\n      <div class=\"movie-card-library\" data-genre=\"${genre}\">\r\n        <img src=\"${posterUrl}\" alt=\"${title}\" class=\"movie-poster-library\">\r\n        <div class=\"movie-info-library\">\r\n          <h3 class=\"movie-title-library\">${title} (${year})</h3>\r\n          <div class=\"movie-rating-library\">${starsHTML}</div>\r\n          <p class=\"movie-genre\">${genre}</p>\r\n        </div>\r\n\r\n        <button class=\"remove-btn\" data-id=\"${id}\">Kaldır</button>\r\n      </div>\r\n    `;\r\n    fragment.appendChild(\r\n      document.createRange().createContextualFragment(movieCardHTML)\r\n    );\r\n  });\r\n  displayedMovies = endIndex;\r\n  movieContainer.appendChild(fragment);\r\n\r\n  // Load More butonunun görünürlüğünü kontrol et\r\n  const loadMoreBtn = document.getElementById('load-more');\r\n  if (loadMoreBtn) {\r\n    if (displayedMovies >= movies.length) {\r\n      loadMoreBtn.style.display = 'none';\r\n    } else {\r\n      loadMoreBtn.style.display = 'block';\r\n    }\r\n  }\r\n}\r\n\r\n// Kaldırma butonları\r\nconst removeButtons = document.querySelectorAll('.remove-btn');\r\nremoveButtons.forEach(button => {\r\n  button.addEventListener('click', () => {\r\n    const movieId = button.getAttribute('data-id');\r\n    removeMovie(movieId);\r\n  });\r\n});\r\n\r\n// Filmleri türe göre filtrele\r\nfunction filterMoviesByGenre(genreId) {\r\n  if (genreId === 'all') {\r\n    displayedMovies = 0;\r\n    renderMovies(currentMovies, false);\r\n    return;\r\n  }\r\n\r\n  // ID veya isim ile filtreleme (esneklik için)\r\n  const filtered = currentMovies.filter(movie => {\r\n    // Genre bir dizi veya string olabilir\r\n    if (typeof movie.genre === 'string') {\r\n      // Filmde birden fazla tür olabileceğinden içerikte arama yap\r\n      return movie.genre.includes(genreMap[genreId]) || movie.genre === genreId;\r\n    } else if (Array.isArray(movie.genre_ids)) {\r\n      return movie.genre_ids.includes(Number(genreId));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  displayedMovies = 0;\r\n  renderMovies(filtered, false);\r\n}\r\n\r\n// Filme kütüphaneye kaydet\r\nfunction saveMovieToLibrary(movie) {\r\n  // Film zaten ekli mi kontrol et\r\n  if (!library.some(m => m.id === movie.id)) {\r\n    library.push(movie);\r\n    localStorage.setItem('library', JSON.stringify(library));\r\n  }\r\n}\r\n\r\n// Filmi kütüphaneden kaldır\r\nfunction removeMovie(movieId) {\r\n  let library = JSON.parse(localStorage.getItem('library')) || [];\r\n  library = library.filter(movie => movie.id != movieId);\r\n  localStorage.setItem('library', JSON.stringify(library));\r\n\r\n  // Güncel listeyi göster\r\n  currentMovies = library;\r\n\r\n  // Film silindikten sonra güncellenmiş listeyi render et\r\n  renderMovies(library, false);\r\n}\r\n\r\n// Kütüphaneden filmleri yükle\r\nfunction loadMoviesFromLibrary() {\r\n  const library = JSON.parse(localStorage.getItem('library')) || [];\r\n  currentMovies = library;\r\n  displayedMovies = 0;\r\n  renderMovies(library, false);\r\n}\r\n"],"names":["currentMovies","displayedMovies","moviesPerPage","genreMap","loadMoviesFromLibrary","genreSelect","genresFetched","fetchGenres","e","selectedGenre","filterMoviesByGenre","loadMoreBtn","renderMovies","event","card","movieId","movie","m","openModal","response","data","genres","allOption","genre","option","updateMovieGenres","error","library","genreNames","id","genreContainer","movies","loadMore","movieContainer","searchBtn","startIndex","endIndex","moviesToShow","fragment","posterUrl","title","year","rating","base","starsHTML","movieCardHTML","removeButtons","button","removeMovie","genreId","filtered"],"mappings":"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"}